clc;clear all;


%EQUILIBRIO ESTABLE


%PARAMETROS
m = 0.1;
Fricc = 0.1; 
long = 0.6;
g = 9.8;
M = 0.5;


%MATRICES
Mat_A = [ 0       1                   0             0;  %X1 = delta
          0    -Fricc/M            -m*g/M           0;  %X2 = delta_p
          0       0                   0             1;  %X3 = phi
          0  -Fricc/(long*M)    -g*(m+M)/(long*M)   0]; %X4 = phi_p

Mat_B = [0; 1/M; 0; 1/(long*M)];

Mat_C = [1 0 0 0];

Mat_M = [Mat_B Mat_A*Mat_B Mat_A^2*Mat_B Mat_A^3*Mat_B ];%Matriz Controlabilidad


%CONDICIONES INICIALES
alfa(1) = pi;
ref = 10;
flag = 0;

h = 0.0001;
tiempo = (100/h);

p_pp = 0;
tita_pp = 0;

omega(1) = 0; 
p_p(1) = 0; 
u(1) = 0; 
p(1) = 0; 

i = 1;


%CONTROLABILIDAD
auto_val = eig(Mat_A);                     
pol_caract_A = poly(Mat_A);

Mat_W = [ pol_caract_A(4)  pol_caract_A(3)  pol_caract_A(2)  1;  
          pol_caract_A(3)  pol_caract_A(2)         1         0;
          pol_caract_A(2)         1                0         0;
                1                 0                0         0];
            
Mat_T = Mat_M*Mat_W;

A_controlable = inv(Mat_T)*Mat_A*Mat_T;   %Verificación de que T esté bien
                                          %Si la inversa existe es controlable
                                        
%METODO LQR
D = [1000 350 50 90]; %Velocidad angular, Posicion angular, Posicion carro, Velocidad carro
Q = diag(D);
R = 10000;
[Klqr,P,polos] = lqr(Mat_A,Mat_B,Q,R)

Glqr = -inv(Mat_C*(eye(4)-inv(Mat_A+Mat_B*Klqr))*Mat_B); %%Es igual a Klqr(1)


%OBSERVADOR
Mat_AO = Mat_A';
Mat_BO = Mat_C';
Mat_CO = Mat_B';

Mat_M_Dual=[Mat_BO Mat_AO*Mat_BO Mat_AO^2*Mat_BO Mat_AO^3*Mat_BO];  %Matriz de Controlabilidad del observador
                                                                     
                                                                    
%UBICACION DEL OBSERVADOR
alfa_io = poly(polos*70);       %Mas rapido (70)
Mat_TO = Mat_M_Dual*Mat_W
KO = (fliplr(alfa_io(2:end)-pol_caract_A(2:end))*inv(Mat_TO))'
eig(Mat_AO'-KO*Mat_C)            %Verifico que todos los polos estén en el semiplano izquierdo

x_hat = [0 0 pi 0]';             %Condiciones iniciales del observador

i = 1;

while(i < (tiempo+1))
    
    
    if(i >= 400000)
        
        if(flag == 0)
            
            flag = 1;
            ref = 0;
            m = 1;
            
        end
        
    end
    
    
    X = [p(i); p_p(i); alfa(i); omega(i)];
    
    %LEY DE CONTROL
    u(i) =-Klqr*X+Glqr*ref;    color='r'; %Solo LQR
%     u(i) = -Klqr*x_hat+Glqr*ref;    color='b'; %Con observador y LQR

    %SISTEMA NO LINEAL
    p_pp = (1/(M+m))*(u(i)-m*long*tita_pp*cos(alfa(i))+m*long*omega(i)^2*sin(alfa(i))-Fricc*p_p(i));
    tita_pp = (1/long)*(g*sin(alfa(i))-p_pp*cos(alfa(i)));
    
    p_p(i+1) = p_p(i)+h*p_pp;
    p(i+1) = p(i)+h*p_p(i);
    omega(i+1) = omega(i)+h*tita_pp;
    alfa(i+1) = alfa(i)+h*omega(i);

    %SISTEMA CON OBSERVADOR
    y_salO(i) = Mat_C*x_hat;
    y_sal(i) = Mat_C*X;
    
    x_hatp = Mat_A*x_hat+Mat_B*u(i)+KO*(y_sal(i)-y_salO(i));
    x_hat = x_hat+h*x_hatp;
   
    
    i = i+1;
    
end

u(i) = u(i-1);
t = 0:tiempo; 
t = t*h;

figure(1); hold on;
subplot(3,2,1); plot(t,omega,color); grid on; title('Velocidad ángulo'); hold on;
subplot(3,2,2); plot(t,alfa,color); grid on; title('Ángulo'); hold on;
subplot(3,2,3); plot(t,p,color); grid on; title('Posición carro'); hold on;
subplot(3,2,4); plot(t,p_p,color); grid on; title('Velocidad carro'); hold on;
subplot(3,1,3); plot(t,u,color); grid on; title('Acción de control'); xlabel('Tiempo en Seg.'); hold on;


