clc; clear;

%PUNTO 1.1

%Parametros y variables de simulacion
LAA = 366e-6;
J = 5e-9;
RA = 55.6;
B = 0;
Ki = 6.49e-3;
Km = 6.53e-3;

%Tiempos
Tf = 1;
ti = 1e-7;

pasos = Tf/ti;
t = 0:ti:Tf;
ia = 0:ti:Tf;
w_p = 0:ti:Tf;
w = 0:ti:Tf;
theta = 0:ti:Tf;

u = linspace(0,Tf,pasos+1);
ref = linspace(0,Tf,pasos+1);

%Definicion variables
%tref = (pi/2);            %tiempo referencia (CASO 1)
tref = (-pi/2);            %tiempo referencia (CASO 2)
%TL = 1.15e-6;             %Torque (CASO 1)
TL = 0;                    %Torque (CASO 2)

tcambio = 300e-3;            %tiempo de cambio (300mseg)
est = 0;
ii = 1;
kk = 0;

%Condiciones iniciales
ia(1) = 0;             %corriente de armadura (X1)
w(1) = 0;              %omega - velocidad angular(X2)
theta(1) = 0;          %theta - posicion (X3)
w_p(1) = 0;            %omega punto (X4)

u(1) = 0;              %tension de entrada

%Matrices de estados
Mat_A = [ -RA/LAA -Km/LAA 0;            %x1 = corriente
            Ki/J   -B/J   0;            %x2 = velocidad angular
             0       1    0]            %x3 = posicion

Mat_B = [ 1/LAA ;    %va
            0 ;                 
            0 ]


Mat_C = [0 0 1]                        %La salida monovariable es theta

%Cálculo del controlador por asignación de polos
Mat_M = [Mat_B(:,1) Mat_A*Mat_B(:,1) Mat_A^2*Mat_B(:,1)]

auto_val = eig(Mat_A)
pol_caract_A = poly(Mat_A);

Mat_W = [ pol_caract_A(3) pol_caract_A(2) 1;
    pol_caract_A(2) 1 0;
    1 0 0]

Mat_T = Mat_M*Mat_W

%Verificacion de la controlabilidad
A_controlable = inv(Mat_T)*Mat_A*Mat_T

%Ubicación de los polos de lazo cerrado
P1 = -0.1e4; 
P2 = -0.0015e6;
P3 = -1.5176e3;

alfa_i = poly([P1 P2 P3]) %Genero la ecuacion de los polos deseada

%CONTROLADOR
K = (fliplr(alfa_i(2:4) - pol_caract_A(2:4)))*inv((Mat_T))

%Regulador con referencia distinta de cero
eig(Mat_A-Mat_B(:,1)*K)                              %Verifico que todos los polos estén en el semiplano izquierdo
G = -inv(Mat_C*inv(Mat_A-(Mat_B(:,1)*K))*Mat_B(:,1)) %Matriz G para correr la referencia del 0


%Parte 2
%Observador
Mat_AT = Mat_A';
Mat_BT = Mat_C'
Mat_CT = Mat_B(:,1)'

Mat_M_Dual = [Mat_BT Mat_AT*Mat_BT Mat_AT^2*Mat_BT] %Matriz Controlabilidad
                                                    %del observador

% Ubicacion del Observador
alfa_io = poly([P1 P2 P3]*150);
Mat_TO = Mat_M_Dual*Mat_W;
KO = (fliplr(alfa_io(2:end)-pol_caract_A(2:end))*inv(Mat_TO))'
eig(Mat_AT'-KO*Mat_C)       %Verifico que todos los polos estén en el semiplano izquierdo
x_hat = [0 0 0]';           %Inicializo el Observador


%Simulacion
while(ii <(pasos+1))
    kk = kk + ti;
    
    if(kk > tcambio)
        tref = tref*(-1);
        
        if(est == 0)
            TL = 0;
            est = 1;
        else
            TL = TL;
            est = 0;
        end
        
        kk = 0;
    end
    
    %Establece la referencia a seguir
    ref(ii) = tref;
    estado = [ia(ii); w(ii); theta(ii)];
    
    
    %Ley de control
    u(ii) = -K*estado+G*ref(ii); color = 'b';  %Sin observador
%     u(ii) = -K*x_hat(:,1)+G*ref(ii); color='r'; %Con observador
    
    U = u(ii);
    
    %Saturador entre -12 y 12
    if U > 12
        u(ii) = 12;
    end
    if U < -12
        u(ii) = -12;
    end
    
    %Integracion Euler
    w_pp = (-w_p(ii)*(RA*J+LAA*B)-w(ii)*(RA*B+Ki*Km)+u(ii)*Ki)/(J*LAA);
    ia_p = (1/LAA)*(-RA*ia(ii)-Km*w(ii)+u(ii));
    
    w_p(ii+1) = w_p(ii)+ti*w_pp-(1/J)*TL;
    ia(ii+1) = ia(ii)+ti*ia_p;
    w(ii+1) = w(ii)+ti*w_p(ii);
    theta(ii+1) = theta(ii)+ti*w(ii);
    
    y_salO(ii) = Mat_C*x_hat(:,1);
    y_sal(ii) = Mat_C*estado;
    
    x_hatp = Mat_A*x_hat+Mat_B(:,1)*u(ii)+KO*(y_sal(ii)-y_salO(ii));
    x_hat = x_hat+ti*x_hatp;
    
    ii = ii+1;
end

%Graficos
figure(1); hold on;
subplot(2,2,1);plot(t,ia,color);grid on; title('i_a , Corriente [A]');xlabel('Tiempo en seg'); hold on
subplot(2,1,2);plot(t,theta,color);grid on; hold on
subplot(2,1,2);plot(t,ref,'k');grid on;title('\theta_t , Posicion angular [rad]');xlabel('Tiempo en seg');hold on
subplot(2,2,2);plot(t,u,color);grid on;title('u_t , Acción de control [V]'); xlabel('Tiempo en seg'); hold on

